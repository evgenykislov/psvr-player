#ifndef FRAME_BUFFER_H
#define FRAME_BUFFER_H

/*! Структура для описания кадрового буфера. Структура не создаётся
автоматически, т.к. она должна создаваться в определённом контексте, с текущим
окном и т.д. Для создания и удаления используйте функции CreateFrameBuffer и
DeleteFrameBuffer */
struct FrameBuffer {
  unsigned int buffer;  //!< Объект кадрового буфера, его номер в OpenGL
  unsigned int texture;  //!< ОБъект текстуры кадрового буфера (номер)

  static const unsigned int texture_size = 1920;
};

/*! Создаём фреймбуфер для использования в конвейере вывода изображений.
Фреймбуфер создаётся в текущем потоке исполнения и в текущем контексте (который
должен быть предварительно назначен). Фреймбуфер создаётся согласно настройкам в
struct FrameBuffer.
\param buffer переменная, в которой возвращается созданный буфер. Содержимое
переменной перезаписывается (считается, что на входе там ничего нет)
\return признак успешности создания фреймбуфера */
bool CreateFrameBuffer(FrameBuffer& buffer);

/*! Удаляем ранее созданный фреймбуфер вместе с выделенными ресурсами
\param buffer ранее созданный фреймбуфер */
void DeleteFrameBuffer(FrameBuffer& buffer);

#endif  // FRAME_BUFFER_H
